// Code generated by MockGen. DO NOT EDIT.
// Source: account_repository.go
//
// Generated by this command:
//
//	mockgen -source=account_repository.go -destination=../mocks/account_repository_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	entity "trilha-api/internal/account/entity"

	gomock "go.uber.org/mock/gomock"
)

// MockAccountRepositoryInterface is a mock of AccountRepositoryInterface interface.
type MockAccountRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAccountRepositoryInterfaceMockRecorder
	isgomock struct{}
}

// MockAccountRepositoryInterfaceMockRecorder is the mock recorder for MockAccountRepositoryInterface.
type MockAccountRepositoryInterfaceMockRecorder struct {
	mock *MockAccountRepositoryInterface
}

// NewMockAccountRepositoryInterface creates a new mock instance.
func NewMockAccountRepositoryInterface(ctrl *gomock.Controller) *MockAccountRepositoryInterface {
	mock := &MockAccountRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockAccountRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountRepositoryInterface) EXPECT() *MockAccountRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockAccountRepositoryInterface) Find(account *entity.AccountEntity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", account)
	ret0, _ := ret[0].(error)
	return ret0
}

// Find indicates an expected call of Find.
func (mr *MockAccountRepositoryInterfaceMockRecorder) Find(account any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockAccountRepositoryInterface)(nil).Find), account)
}

// Register mocks base method.
func (m *MockAccountRepositoryInterface) Register(account *entity.AccountEntity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", account)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockAccountRepositoryInterfaceMockRecorder) Register(account any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockAccountRepositoryInterface)(nil).Register), account)
}
